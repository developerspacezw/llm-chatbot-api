name: Build and Push Docker Images

on:
  push:
    branches:
      - master
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push LLM Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: LLM.Dockerfile
          push: true
          tags: |
            ghcr.io/developerspacezw/llm-chatbot-api-llm:release
            ghcr.io/developerspacezw/llm-chatbot-api-llm:${{ github.sha }}

      - name: Build and push WebSocket Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Websocket.Dockerfile
          push: true
          tags: |
            ghcr.io/developerspacezw/llm-chatbot-api-websocket:release
            ghcr.io/developerspacezw/llm-chatbot-api-websocket:${{ github.sha }}

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_names: llm-chatbot-api-llm,llm-chatbot-api-websocket,
          name: Build ${{ env.BUILD_NUMBER }} (${{ env.TIMESTAMP }})
          body: |
            üöÄ Automated build from commit ${{ github.sha }}

            üóíÔ∏è Release Notes:

            ${{ steps.pr-description.outputs.PR_BODY }}

            - Image `ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}`

            - Image tags:
              - `release`
              - `${{ env.BUILD_NUMBER }}`
              - `${{ env.TIMESTAMP }}`

            Pull images:

            üê≥ Using Docker
            `docker pull ghcr.io/${{ github.actor }}/llm-chatbot-api-websocket:release`
            `docker pull ghcr.io/${{ github.actor }}/llm-chatbot-api-websocket:${{ github.sha }}`
            `docker pull ghcr.io/${{ github.actor }}/llm-chatbot-api-llm:release`
            `docker pull ghcr.io/${{ github.actor }}/llm-chatbot-api-llm:${{ github.sha }}`


            üì¶ Using Podamn
            `podman pull ghcr.io/${{ github.actor }}/llm-chatbot-api-websocket:release`
            `podman pull ghcr.io/${{ github.actor }}/llm-chatbot-api-websocket:${{ github.sha }}`
            `podman pull ghcr.io/${{ github.actor }}/llm-chatbot-api-llm:release`
            `podman pull ghcr.io/${{ github.actor }}/llm-chatbot-api-llm:${{ github.sha }}`

          draft: false
          prerelease: false
          token: ${{ secrets.GIT_TOKEN }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ format('{0} App Build Complete!', needs.build.result == 'success' && '‚úÖ' || '‚ùå') }}

            üöÄ Build Status: ${{ needs.build.result == 'success' && 'SUCCESS ‚úÖ' || 'FAILED ‚ùå' }}

            üë§ ${{ github.actor }} created commit:

            üìù Commit message: ${{ github.event.commits[0].message }}

            üîó Repository: ${{ github.repository }}

            üîç View changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
